global
    maxconn 50000
    log stdout format raw local0
    stats socket ipv4@0.0.0.0:9999 level admin
    stats timeout 2m

defaults
    timeout connect 10s
    timeout client 30s
    timeout server 30s
    log global
    mode http
    option httplog
    option log-health-checks
    option dontlog-normal
    option forwardfor
    option http-use-htx
    maxconn 3000

frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST

#####################
# Kong listen ports #
#####################

#
# Expose Kong ports on :443
#
frontend local-https-shared
    bind *:443 ssl crt /tmp/ssl/customcerts/combined-wild.pem alpn h2,http/1.1 tfo
    bind *:80
    mode http
    use_backend kong_http_proxy_nodes if { hdr(host) -i proxy.kong.lan }
    use_backend kong_http_admin_api_nodes if { hdr(host) -i api.kong.lan }
    use_backend kong_http_manager_nodes if { hdr(host) -i manager.kong.lan }
    use_backend kong_http_dev_portal_nodes if { hdr(host) -i portal.kong.lan }
    use_backend kong_http_dev_portal_api_nodes if { hdr(host) -i portal-api.kong.lan }
    use_backend utility_smtp_nodes if { hdr(host) -i mail.kong.lan }
    use_backend utility_graylog_nodes if { hdr(host) -i graylog.kong.lan }
    use_backend utility_locust_nodes if { hdr(host) -i locust.kong.lan }
    use_backend utility_kafka_ui_nodes if { hdr(host) -i kafka-ui.kong.lan }
    default_backend kong_http_proxy_nodes

#
# Kong Proxy port
#
frontend local-http-proxy
    bind *:8000
    mode http
    default_backend kong_http_proxy_nodes

frontend local-https-proxy
    bind *:8443
    mode tcp
    option tcplog
    default_backend kong_https_proxy_nodes

#
# Kong Admin API port
#
frontend local-http-admin-api
    bind *:8001
    mode http
    default_backend kong_http_admin_api_nodes

frontend local-https-admin-api
    bind *:8444
    mode tcp
    option tcplog
    default_backend kong_https_admin_api_nodes

#
# Kong Kong Manager GUI port
#
frontend local-http-manager
    bind *:8002
    mode http
    default_backend kong_http_manager_nodes

frontend local-https-manager
    bind *:8445
    mode tcp
    option tcplog
    default_backend kong_https_manager_nodes

#
# Kong Dev Portal GUI port
#
frontend local-http-dev-portal
    bind *:8003
    mode http
    default_backend kong_http_dev_portal_nodes

frontend local-https-dev-portal
    bind *:8446
    mode tcp
    option tcplog
    default_backend kong_https_dev_portal_nodes

#
# Kong Dev Portal API port
#
frontend local-http-dev-portal-api
    bind *:8004
    mode http
    default_backend kong_http_dev_portal_api_nodes

frontend local-https-dev-portal-api
    bind *:8447
    mode tcp
    option tcplog
    default_backend kong_https_dev_portal_api_nodes
#
# Kong Status port
#
frontend local-https--status
    bind *:8100
    mode tcp
    option tcplog
    default_backend kong_https_status_nodes



######################
# Kong cluster nodes #
######################

#
# Kong Proxy nodes
#
backend kong_http_proxy_nodes
    mode http
    balance roundrobin
    http-response set-header X-Server %s
    option httpchk GET /health
    default-server check inter 30s alpn h2,http/1.1
    server kongpose_kong-node_1 kongpose_kong-node_1:48000
    server kongpose_kong-node_2 kongpose_kong-node_2:48000

backend kong_https_proxy_nodes
    mode tcp
    option tcp-check
    default-server check inter 30s alpn h2,http/1.1
    server kongpose_kong-node_1 kongpose_kong-node_1:48443
    server kongpose_kong-node_2 kongpose_kong-node_2:48443

#
# Kong Admin API nodes
#
backend kong_http_admin_api_nodes
    mode http
    balance roundrobin
    http-response set-header X-Server %s
    option httpchk GET /health
    default-server inter 10s
    server kongpose_kong-node_1 kongpose_kong-node_1:48001
    server kongpose_kong-node_2 kongpose_kong-node_2:48001

backend kong_https_admin_api_nodes
    mode tcp
    option tcp-check
    default-server check inter 30s
    server kongpose_kong-node_1 kongpose_kong-node_1:48444
    server kongpose_kong-node_2 kongpose_kong-node_2:48444

#
# Kong Manager nodes
#
backend kong_http_manager_nodes
    mode http
    balance roundrobin
    http-response set-header X-Server %s
    option httpchk GET /health
    default-server inter 10s
    server kongpose_kong-node_1 kongpose_kong-node_1:48002
    server kongpose_kong-node_2 kongpose_kong-node_2:48002

backend kong_https_manager_nodes
    mode tcp
    option tcp-check
    default-server check inter 30s alpn h2,http/1.1
    server kongpose_kong-node_1 kongpose_kong-node_1:48445
    server kongpose_kong-node_2 kongpose_kong-node_2:48445

#
# Kong Dev Portal GUI nodes
#
backend kong_http_dev_portal_nodes
    mode http
    balance roundrobin
    http-response set-header X-Server %s
    option httpchk GET /health
    default-server inter 10s
    server kongpose_kong-node_1 kongpose_kong-node_1:48003
    server kongpose_kong-node_2 kongpose_kong-node_2:48003

backend kong_https_dev_portal_nodes
    mode tcp
    option tcp-check
    default-server check inter 30s
    server kongpose_kong-node_1 kongpose_kong-node_1:48446
    server kongpose_kong-node_2 kongpose_kong-node_2:48446

#
# Kong Dev Portal API nodes
#
backend kong_http_dev_portal_api_nodes
    mode http
    balance roundrobin
    http-response set-header X-Server %s
    option httpchk GET /health
    default-server inter 10s
    server kongpose_kong-node_1 kongpose_kong-node_1:48004
    server kongpose_kong-node_2 kongpose_kong-node_2:48004

backend kong_https_dev_portal_api_nodes
    mode tcp
    option tcp-check
    default-server check inter 30s
    server kongpose_kong-node_1 kongpose_kong-node_1:48447
    server kongpose_kong-node_2 kongpose_kong-node_2:48447

#
# Kong Status nodes
#
backend kong_https_status_nodes
    mode tcp
    option tcp-check
    default-server check inter 30s
    server kongpose_kong-node_1 kongpose_kong-node_1:48100
    server kongpose_kong-node_2 kongpose_kong-node_2:48100

#
# Utility Services
#
backend utility_smtp_nodes
    mode http
    balance roundrobin
    server kongpose_fake-smtp-server_1 kongpose_fake-smtp-server_1:1080

backend utility_graylog_nodes
    mode http
    balance roundrobin
    server kongpose_graylog_1 kongpose_graylog_1:9000

backend utility_locust_nodes
    mode http
    balance roundrobin
    server kongpose_locust_1 kongpose_locust_1:8089

backend utility_kafka_ui_nodes
    mode http
    balance roundrobin
    server kongpose_kafka-ui_1 kongpose_kafka-ui_1:8080

