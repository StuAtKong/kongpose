version: '2.1'

networks:
  case-kong-net:
    name: case-kong-net
    driver: bridge

services:
  kong-migrations:
    image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.2.0.0-alpine
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.1.4.2-alpine
    container_name: case-kong-ee-mig
    networks:
      - case-kong-net
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    restart: on-failure

  kong-ee:
    image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.2.0.0-alpine
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.1.4.2-alpine
    container_name: case-kong-ee
    networks:
      - case-kong-net
    user: "${KONG_USER:-kong}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002"
      KONG_PORTAL_GUI_LISTEN: "0.0.0.0:8003"
      KONG_PORTAL_API_LISTEN: "0.0.0.0:8004"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_AUDIT_LOG: "off"
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "on"
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_LOG_LEVEL: "debug"
      KONG_ENFORCE_RBAC: "on"
      KONG_ADMIN_API_URI: "http://api.kong.lan:8001"
      KONG_ADMIN_GUI_URL: "http://api.kong.lan:8002"
      KONG_ADMIN_GUI_AUTH: "basic-auth"
      KONG_ADMIN_GUI_SESSION_CONF: "{ \"cookie_name\": \"manager-session\", \"secret\": \"this_is_my_other_secret\", \"storage\": \"kong\", \"cookie_secure\":true, \"cookie_lifetime\":36000}"
      KONG_PORTAL: "on"
      KONG_PORTAL_GUI_PROTOCOL: "http"
      KONG_PORTAL_GUI_HOST: "api.kong.lan:8003"
      KONG_PORTAL_API_URL: "http://api.kong.lan:8004"
      KONG_PORTAL_SESSION_CONF: "{\"cookie_name\":\"portal-session\",\"secret\":\"this_is_my_secret\",\"storage\":\"kong\",\"cookie_secure\":true}"
      KONG_SMTP_MOCK: "on"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    ports:
      - "8000-8004:8000-8004/tcp"
      - "8100:8100/tcp"

  db:
    networks:
      - case-kong-net
    image: postgres:9.5
    container_name: case-kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true

  httpbin-1:
    networks:
      - case-kong-net
    container_name: case-httpbin-1
    image: "kennethreitz/httpbin"
#    ports:
#      - "80:80/tcp"

  deck:
    networks:
      - case-kong-net
    container_name: case-deck
    image: kong/deck:v1.2.3
    volumes:
        - .:/tmp:ro
    environment:
        DECK_ANALYTICS: "off"
        DECK_KONG_ADDR: "http://kong-ee:8001"
        DECK_HEADERS: "kong-admin-token:password"
    depends_on:
      kong-ee:
        condition: service_healthy
    command: sync --state=/tmp/workspace-compose.yaml

