version: '2.2'

networks:
  kongpose-net:
    name: kongpose-net
    driver: bridge

services:
  kong-migrations:
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.3.0-alpine
    #image: kong/kong-gateway:2.4.1.1-alpine
    #image: kong/kong-gateway:2.5.0.2-alpine
    #image: kong/kong-gateway:2.5.1.1-alpine
    #image: kong/kong-gateway:2.6.0.2-alpine
    #image: kong/kong-gateway:2.7.1.2-alpine
    image: kong/kong-gateway:2.8.1.1-alpine
    networks:
      - kongpose-net
    volumes:
      - ./ssl-certs:/tmp/ssl/customcerts
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      #KONG_PG_DATABASE: kong
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_SSL: "on"
      KONG_PG_SSL_REQUIRED: "on"
      KONG_PG_SSL_VERSION: "tlsv1_3"
      #KONG_PG_SSL_CERT: "/usr/local/kong/certs/pg-client.crt"
      #KONG_PG_SSL_CERT_KEY: "/usr/local/kong/certs/pg-client.key"
      #LUA_SSL_TRUSTED_CERTIFICATE: "/usr/local/kong/certs/pg-server-ca.crt"
      KONG_PASSWORD: password
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    restart: on-failure

  kong-cp:
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.3.0-alpine
    #image: kong/kong-gateway:2.4.1.1-alpine
    #image: kong/kong-gateway:2.5.0.2-alpine
    #image: kong/kong-gateway:2.5.1.1-alpine
    #image: kong/kong-gateway:2.6.0.2-alpine
    #image: kong/kong-gateway:2.7.1.2-alpine
    image: kong/kong-gateway:2.8.1.1-alpine
    mem_limit: 2g
    networks:
      - kongpose-net
    user: "${KONG_USER:-kong}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./ssl-certs:/tmp/ssl/customcerts
      - ./tracing:/usr/local/kong/tracing
      - ./http_content:/tmp/htdocs
      - ../kong-plugin-udp-gelf-log/kong/plugins/udp-gelf-log:/usr/local/share/lua/5.1/kong/plugins/udp-gelf-log
    environment:
      KONG_PROXY_LISTEN: "off"
      KONG_ADMIN_LISTEN: "0.0.0.0:48001, 0.0.0.0:48444 http2 ssl"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:48002, 0.0.0.0:48445 http2 ssl"
      KONG_PORTAL_GUI_LISTEN: "0.0.0.0:48003, 0.0.0.0:48446 http2 ssl"
      KONG_PORTAL_API_LISTEN: "0.0.0.0:48004, 0.0.0.0:48447 http2 ssl"
      KONG_STATUS_LISTEN: "0.0.0.0:48100 ssl"
      KONG_CLUSTER_LISTEN: "0.0.0.0:48005"
      KONG_CLUSTER_TELEMETRY_LISTEN: "0.0.0.0:48006"
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      #KONG_PG_HOST: toxiproxy
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_MAX_CONCURRENT_QUERIES: 5
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_GUI_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_GUI_ERROR_LOG: /dev/stderr
      KONG_PORTAL_API_ACCESS_LOG: /dev/stdout
      KONG_PORTAL_API_ERROR_LOG: /dev/stderr
      KONG_PORTAL_GUI_ACCESS_LOG: /dev/stdout
      KONG_PORTAL_GUI_ERROR_LOG: /dev/stderr
      KONG_STATUS_ACCESS_LOG: /dev/stdout
      KONG_STATUS_ERROR_LOG: /dev/stderr
      KONG_STATUS_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_STATUS_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_AUDIT_LOG: "on"
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "off"
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_LOG_LEVEL: "debug"
      KONG_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ENFORCE_RBAC: "on"
      KONG_ADMIN_API_URI: "https://api.kong.lan"
      KONG_ADMIN_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_ADMIN_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ADMIN_GUI_URL: "https://manager.kong.lan"
      KONG_ADMIN_GUI_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_ADMIN_GUI_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ADMIN_GUI_SESSION_CONF: "{ \"cookie_name\": \"manager-session\", \"secret\": \"this_is_my_other_secret\", \"storage\": \"kong\", \"cookie_secure\":true, \"cookie_lifetime\":36000}"
      # Kong Manager auth via BasicAuth
      KONG_ADMIN_GUI_AUTH: "basic-auth"
      KONG_PORTAL: "on"
      KONG_PORTAL_GUI_PROTOCOL: "https"
      KONG_PORTAL_GUI_HOST: "portal.kong.lan"
      KONG_PORTAL_GUI_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_PORTAL_GUI_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_PORTAL_API_URL: "https://portal-api.kong.lan"
      KONG_PORTAL_API_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_PORTAL_API_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_PORTAL_AUTH: "openid-connect"
      KONG_PORTAL_AUTH_CONF: "{\"auth_methods\":[\"authorization_code\",\"session\"],\"authorization_cookie_domain\":\".kong.lan\",\"authorization_cookie_samesite\":\"None\",\"authorization_cookie_secure\":true,\"client_id\":[\"4bf4e6a0-43db-4f89-b901-342045486873\"],\"client_secret\":[\"wdy7Q~aIi_hEE4eQd~wwkm5UK2.g.jr1SZVhl\"],\"consumer_by\":[\"username\",\"custom_id\",\"id\"],\"consumer_claim\":[\"email\"],\"forbidden_redirect_uri\":[\"https://portal.kong.lan/default/unauthorized\"],\"issuer\":\"https://login.microsoftonline.com/e4bf00f3-2010-40d6-b82f-58df9f957e49/v2.0/.well-known/openid-configuration\",\"leeway\":100,\"login_action\":\"redirect\",\"login_redirect_mode\":\"query\",\"login_redirect_uri\":[\"https://portal.kong.lan/default\"],\"logout_methods\":[\"GET\"],\"logout_query_arg\":\"logout\",\"logout_redirect_uri\":[\"https://portal.kong.lan/default\"],\"redirect_uri\":[\"https://portal-api.kong.lan/default/auth\"],\"scopes\":[\"openid\",\"profile\",\"email\",\"4bf4e6a0-43db-4f89-b901-342045486873/.default\"],\"session_cookie_domain\":\".kong.lan\",\"session_cookie_samesite\":\"None\",\"session_cookie_secure\":true,\"session_storage\":\"cookie\",\"ssl_verify\":false,\"verify_parameters\":false,\"by_username_ignore_case\":true}"
      KONG_PORTAL_SESSION_CONF: "{\"cookie_name\":\"portal-session\",\"secret\":\"this_is_my_secret\",\"storage\":\"kong\",\"cookie_secure\":true, \"cookie_domain\":\".kong.lan\", \"cookie_samesite\":\"off\"}"
      KONG_PORTAL_EMAIL_VERIFICATION: "off"
      KONG_PORTAL_EMAILS_FROM: "stu@konghq.com"
      KONG_PORTAL_EMAILS_REPLY_TO: "stu@konghq.com"
      KONG_ADMIN_EMAILS_FROM: "stu@konghq.com"
      KONG_ADMIN_EMAILS_REPLY_TO: "stu@konghq.com"
      KONG_SMTP_MOCK: "off"
      KONG_SMTP_ADMIN_EMAILS: "stu@konghq.com"
      KONG_SMTP_HOST: "kongpose_fake-smtp-server_1"
      KONG_SMTP_PORT: 1025
      KONG_SMTP_DOMAIN: "api.kong.lan"
      KONG_TRACING: "off"
      KONG_TRACING_DEBUG_HEADER: "X-Kong-Debug"
      KONG_TRACING_WRITE_ENDPOINT: "/usr/local/kong/tracing/kong-postgres.trc"
      KONG_GENERATE_TRACE_DETAILS: "on"
      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /tmp/ssl/customcerts/hybrid/cluster.crt
      KONG_CLUSTER_CERT_KEY: /tmp/ssl/customcerts/hybrid/cluster.key
      KONG_CLUSTER_DATA_PLANE_PURGE_DELAY: 60
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_EVENT_HOOKS_ENABLED: "on"
      KONG_TRUSTED_IPS: "0.0.0.0/0"
      KONG_REAL_IP_HEADER: "X-Forwarded-For"
      KONG_REAL_IP_RECURSIVE: "on"
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "system"
      KONG_LUA_SSL_VERIFY_DEPTH: 5
      KONG_NGINX_HTTP_INCLUDE: "/tmp/htdocs/http_server.conf"
      #KONG_KEYRING_ENABLED: "on"
      #KONG_KEYRING_STRATEGY: "cluster"
      #KONG_KEYRING_PUBLIC_KEY: "/tmp/ssl/customcerts/keyring/keyring-public-key.pem"
      #KONG_KEYRING_PRIVATE_KEY: "/tmp/ssl/customcerts/keyring/keyring-private-key.pem"
      KONG_PLUGINS: "bundled,udp-gelf-log"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  kong-dp:
    #image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.3.0-alpine
    #image: kong/kong-gateway:2.4.1.1-alpine
    #image: kong/kong-gateway:2.5.0.2-alpine
    #image: kong/kong-gateway:2.5.1.1-alpine
    #image: kong/kong-gateway:2.6.0.1-alpine
    #image: kong/kong-gateway:2.6.0.2-alpine
    #image: kong/kong-gateway:2.7.1.2-alpine
    image: kong/kong-gateway:2.8.1.1-alpine
    #mem_limit: 8g
    scale: 1
    networks:
      - kongpose-net
    depends_on:
      kong-cp:
        condition: service_healthy
    volumes:
      - ./ssl-certs:/tmp/ssl/customcerts
      - ./tracing:/usr/local/kong/tracing
      - ../kong-plugin-udp-gelf-log/kong/plugins/udp-gelf-log:/usr/local/share/lua/5.1/kong/plugins/udp-gelf-log
    environment:
      KONG_ADMIN_LISTEN: "0.0.0.0:48001, 0.0.0.0:48444 http2 ssl"
      KONG_PROXY_LISTEN: "0.0.0.0:48000, 0.0.0.0:48443 http2 ssl"
      KONG_STREAM_LISTEN: "0.0.0.0:45555, 0.0.0.0:45556 ssl reuseport backlog=65536"
      KONG_STATUS_LISTEN: "0.0.0.0:48100"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_DATABASE: "off"
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_LOG_LEVEL: "debug"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "off"
      KONG_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ADMIN_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_ADMIN_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_PORTAL_API_SSL_CERT_KEY: "/tmp/ssl/customcerts/smallstep/kong.lan.key"
      KONG_PORTAL_API_SSL_CERT: "/tmp/ssl/customcerts/smallstep/kong.lan.pem"
      KONG_ROLE: data_plane
      KONG_CLUSTER_CERT: /tmp/ssl/customcerts/hybrid/cluster.crt
      KONG_CLUSTER_CERT_KEY: /tmp/ssl/customcerts/hybrid/cluster.key
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: /tmp/ssl/customcerts/hybrid/cluster.crt,system
      KONG_LUA_SSL_VERIFY_DEPTH: 5
      KONG_CLUSTER_CONTROL_PLANE: kongpose_kong-cp_1:48005
      KONG_CLUSTER_TELEMETRY_ENDPOINT: kongpose_kong-cp_1:48006
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_EVENT_HOOKS_ENABLED: "on"
      KONG_TRUSTED_IPS: "0.0.0.0/0"
      KONG_REAL_IP_HEADER: "X-Forwarded-For"
      KONG_REAL_IP_RECURSIVE: "on"
      KONG_PLUGINS: "bundled,udp-gelf-log"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  db:
    networks:
      - kongpose-net
    image: postgres:14-alpine
    volumes:
      - ./ssl-certs:/tmp/ssl/customcerts
      - ./postgres/postgresql.conf:/tmp/postgresql.conf
    command: "postgres -c config_file=/tmp/postgresql.conf"
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
      # Uncomment if kong version <2.3.2.0 i.e. does not support scram-sha256
      #POSTGRES_HOST_AUTH_METHOD: md5
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true

  ha-proxy:
    networks:
      - kongpose-net
    image: haproxy:2.3.5-alpine
    volumes:
      - ./ha-proxy:/usr/local/etc/haproxy:ro
      - ./ssl-certs:/tmp/ssl/customcerts
    depends_on:
      kong-cp:
        condition: service_healthy
      kong-dp:
        condition: service_healthy
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8000-8004:8000-8004/tcp"
      - "8443-8447:8443-8447/tcp"
      - "8100:8100/tcp"
      - "8181:8181/tcp"
      - "8404:8404/tcp"
      - "9999:9999/tcp"
      - "5555-5556:5555-5556/tcp"

